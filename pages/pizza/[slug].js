import Layout from '../../components/Layout'
import {client, urlFor} from '../../lib/client'
import Image from 'next/image'
import css from '../../styles/Pizza.module.css';
import LeftArrow from '../../assets/arrowLeft.png';
import RightArrow from '../../assets/arrowRight.png'
import { useState } from 'react';
import { useStore } from '../../store/store';
import toast,{Toaster} from 'react-hot-toast'
import Head from "next/head";

export default function Pizza({pizza}) {

    const [Size,setSize] = useState(1);
    const [Quantity, setQuantity] = useState(1);

    const src = urlFor(pizza.image).url();

    // Handle Quantity
    const handleQuan = (type)=>{
        type=="inc"?
        setQuantity((prev)=>prev+1):
        Quantity==1?null:setQuantity((prev)=>prev-1);
    }
  
    //store
    const addPizza = useStore((state)=>state.addPizza);
    //add to Cart
    const addToCart = ()=>{
        addPizza({...pizza,price: pizza.price[Size],quantity: Quantity,size: Size})

        toast.success('Added to Cart!');
        
    }

    return(
        <Layout>
            <div>
                <Head>
                    <title>FUDO</title>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="icon" href="/Logo.png" />
                </Head>
            </div>
            <div className={css.container}>
                <div className={css.imageWrapper}>
                    <Image
                    loader={()=>src}
                    src={src} alt=""
                    layout='fill' unoptimized
                    objectFit='cover'/>
                </div>


            {/* rightSide */}
                <div className={css.right}>
                    <span>{pizza.name}</span>
                    <span>{pizza.detail}</span>
                    <span>
                        <span style={{color:"var(--themeRed)"}}>$</span> {pizza.price[Size]}</span>

                    <div className={css.size}>
                        <span>Size</span>

                        <div className={css.sizeVariants}>
                            <div
                            onClick={()=>setSize(0)}
                            className={Size==0? css.selected : ""}>Small</div>
                            <div
                            onClick={()=>setSize(1)}
                            className={Size==1? css.selected : ""}>Medium</div>
                            <div
                            onClick={()=>setSize(2)}
                            className={Size==2? css.selected : ""}>Large</div>
                        </div>

                    </div>

                    {/* Quantity */}
                    <div className={css.quantity}>
                        <span>Quantity</span>

                        <div className={css.counter}>
                            <Image src={LeftArrow}
                            objectFit="contain"
                            width={20}
                            height={20}
                            alt=""
                            onClick={()=>{handleQuan("dec")}} />

                            <span>{Quantity}</span>

                            <Image src={RightArrow}
                            objectFit="contain"
                            width={20}
                            height={20}
                            alt=""
                            onClick={()=>{handleQuan("inc")}}/>

                        </div>

                    </div>
                    {/* Button */}
                    <div className={`btn ${css.btn}`}
                    onClick={addToCart}>
                        Add to Cart
                    </div>
                   
                </div>
                <Toaster />

            </div>
        </Layout>
    )
}

export async function getStaticPaths(){

    const paths = await client.fetch(
        `*[_type=="pizza" && defined(slug.current)][].slug.current`
    );

    console.log(paths);

    return{
        paths: paths.map((slug)=>({params:{slug}})),
        fallback: "blocking"
    }
}

export async function getStaticProps(context){

    console.log(context)

    const {slug = ""} = context.params;
    console.log(slug);
    const pizza  = await client.fetch(
        `*[_type=="pizza" && slug.current == '${slug}'][0]`
    );

    return{
        props:{
            pizza,
        }
    }
}