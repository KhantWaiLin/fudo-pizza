import Layout from "../components/Layout";
import Head from "next/head";
import { useStore } from "../store/store";
import css from '../styles/Cart.module.css'
import Image from 'next/image';
import {urlFor} from '../lib/client';
import toast,{Toaster} from "react-hot-toast";
import { useState } from "react";
import OrderModal from '../components/OrderModal'
import {useRouter} from "next/router";

export default function Cart() {

    const router = useRouter();
    const CartData = useStore((state)=>state.cart);
    const removePizza = useStore((state)=>state.removePizza);
    const [PaymentMethod, setPaymentMethod] = useState(null);
    const [Order, setOrder] = useState(
      typeof window !== 'undefined' &&  localStorage.getItem('order')
    );

    const handleRemove = (i)=>{
      removePizza(i);
      toast.error("Item Removed!!")
    }

    const handleOnDelivery = ()=>{
      setPaymentMethod(0);
      typeof window !== 'undefined' &&  localStorage.setItem('total',total());

    }

    const handleCheckout = async()=>{
      typeof window !== 'undefined' && localStorage.setItem('total',total());
      setPaymentMethod(1);
      const response = await fetch('/api/stripe',{
        method : "POST",
        headers: {
          'Content-type': "application/json",
        },
        body: JSON.stringify(CartData.pizzas),

      })

      if(response.status === 500) return;
      const data = await response.json();
      toast.loading("Redirecting...");
      router.push(data.url);


    }

    const total = ()=>CartData.pizzas.reduce((a,b)=>a+b.price*b.quantity,0)
    
     return(
        <Layout>
         <div>
           <Head>
             <title>FUDO</title>
             <meta name="description" content="Generated by create next app" />
             <link rel="icon" href="/Logo.png" />
           </Head>
         </div>
            <div className={css.container}>

              {/* Detail  */}
                <div className={css.detail}>
                    <table className={css.table}>
                        <thead>
                            <th>Pizza</th>
                            <th>Name</th>
                            <th>Size</th>
                            <th>Price</th>
                            <th>Quantity</th>
                            <th>Total</th>
                            <th></th>
                        </thead>
                        <tbody className={css.tbody}>
                            {CartData.pizzas.length > 0 &&
                            CartData.pizzas.map((pizza,i)=>{
                                const src = urlFor(pizza.image).url();
                                return(
                                    <tr>
                                       <td  className={css.imageTd}>
                                          <Image 
                                          loader={()=>src}
                                          src={src}
                                          alt=""
                                          width={85}
                                          height={85}
                                          objectFit="cover"
                                          />
                                       </td>
                                       <td>
                                         {pizza.name}
                                       </td>
                                       <td>
                                         {
                                            pizza.size === 0?
                                            "Small":
                                            pizza.size === 1?
                                            "Medium":
                                            "Large"
                                         }
                                       </td>
                                       <td>
                                         {pizza.price}
                                       </td>
                                       <td>
                                         {pizza.quantity}
                                       </td>
                                       <td>
                                         {pizza.price * pizza.quantity}
                                       </td>
                                       <td style={{
                                        color:"var(--themeRed)",
                                        cursor:"pointer"
                                       }}
                                       onClick={()=>handleRemove(i)}>
                                        x
                                       </td>
                                    </tr>


                                )
                                   
                            })}


                        </tbody>

                    </table>
                </div>
                {/* Summary */}
                <div className={css.cart}>
                  <span>Cart</span>
                  <div className={css.CartDetails}>
                    <div>
                        <span>Items</span>
                        <span>{CartData.pizzas.length}</span>
                    </div>

                    <div>
                      <span>Total</span>
                      <span>$ {total()}</span>
                    </div>

                  </div>
                  {!Order && CartData.pizzas.length > 0?(
                    <div className={css.buttons}>
                    <button className={`btn`} onClick={handleOnDelivery}>Pay on Delivery</button>
                    <button className={`btn`} onClick={handleCheckout}>Pay Now</button>
                  </div>
                  ): null}
                    
                </div>
            </div>
             <Toaster />
             <OrderModal 
             opened={PaymentMethod === 0}
             setOpened = {setPaymentMethod}
             PaymentMethod={PaymentMethod} />
        </Layout>
    )
}